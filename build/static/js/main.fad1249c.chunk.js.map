{"version":3,"sources":["components/list-items.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listData","items","map","e","className","text","onClick","onDelete","key","icon","library","add","faTrash","App","state","CurrentItem","handleInput","bind","addItem","deleteItem","this","setState","target","value","Date","now","item","console","log","newItems","filter","x","preventDefault","newItem","id","onSubmit","type","placeholder","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAUeA,EAPG,SAACC,GACf,IAAIC,EAAWD,EAAME,MAAMC,KAAI,SAACC,GAC5B,OAAO,sBAAKC,UAAU,aAAf,UAA6BD,EAAEE,KAA/B,IAAqC,sBAAMC,QAAS,kBAAMP,EAAMQ,SAASJ,EAAEK,MAAtC,SAA4C,cAAC,IAAD,CAAiBJ,UAAU,UAAUK,KAAK,kBAEtI,OAAO,8BAAMT,K,eCFjBU,IAAQC,IAAIC,K,IAyEGC,E,kDAtEb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXb,MAAO,GACPc,YAAa,CACXV,KAAM,GACNG,IAAK,KAGT,EAAKQ,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAXD,E,+CAcnB,SAAYd,GACViB,KAAKC,SAAS,CACZN,YAAa,CACXV,KAAMF,EAAEmB,OAAOC,MACff,IAAKgB,KAAKC,W,wBAKhB,SAAWC,GACTC,QAAQC,IAAIF,GACZ,IACMG,EADQT,KAAKN,MAAMb,MACF6B,QAAO,SAAAC,GAAC,OAAIA,EAAEvB,MAAQkB,KAC7CN,KAAKC,SAAS,CACZpB,MAAO4B,M,qBAIX,SAAQ1B,GACNA,EAAE6B,iBACF,IAAMC,EAAUb,KAAKN,MAAMC,YAC3B,GAAoB,IAAhBkB,EAAQ5B,KAAY,CACtB,IAAMwB,EAAQ,sBAAOT,KAAKN,MAAMb,OAAlB,CAAyBgC,IACvCb,KAAKC,SAAS,CACZpB,MAAO4B,EACPd,YAAa,CACXV,KAAM,GACNG,IAAK,S,oBAQb,WACE,OACE,oCAAM,oBAAIJ,UAAU,cAAd,wBACN,qBAAKA,UAAU,MAAf,SAEE,mCACE,uBAAM8B,GAAG,aAAaC,SAAUf,KAAKF,QAArC,UACE,uBAAOkB,KAAK,OAAOC,YAAY,aAC7Bd,MAAOH,KAAKN,MAAMC,YAAYV,KAC9BiC,SAAUlB,KAAKJ,cACjB,wBAAQoB,KAAK,SAAb,oBAEF,cAAC,EAAD,CAAWF,GAAG,OAAOjC,MAAOmB,KAAKN,MAAMb,MAAOM,SAAUa,KAAKD,yB,GA9DrDoB,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,kCAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fad1249c.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../list-items.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nconst ListItems = (props) => {\r\n    let listData = props.items.map((e) => {\r\n        return <div className=\"list listp\">{e.text} <span onClick={() => props.onDelete(e.key)}><FontAwesomeIcon className='faicons' icon=\"trash\" /></span></div>\r\n    })\r\n    return <div>{listData}</div>\r\n\r\n}\r\nexport default ListItems","import React from 'react';\nimport './App.css';\nimport ListItems from \"./components/list-items\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      CurrentItem: {\n        text: '',\n        key: ''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      CurrentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  deleteItem(item) {\n    console.log(item);\n    const items = this.state.items;\n    const newItems = items.filter(x => x.key !== item);\n    this.setState({\n      items: newItems\n    })\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.CurrentItem;\n    if (newItem.text != \"\") {\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        CurrentItem: {\n          text: '',\n          key: ''\n\n        }\n      })\n    }\n\n  }\n\n  render() {\n    return (\n      <div> <h2 className=\"header-todo\">TO-DO-LIST</h2>\n      <div className=\"App\"> \n            \n        <header>         \n          <form id=\"to-do-list\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter Text\"\n              value={this.state.CurrentItem.text}\n              onChange={this.handleInput} />\n            <button type=\"submit\">Add</button>\n          </form>\n          <ListItems id='list' items={this.state.items} onDelete={this.deleteItem} />\n        </header>\n      </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <list-items/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}